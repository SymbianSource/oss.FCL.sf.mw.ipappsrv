EXPORTS
	??1CSecureSocket@@UAE@XZ @ 1 NONAME ; CSecureSocket::~CSecureSocket(void)
	?AvailableCipherSuites@CSecureSocket@@QAEHAAVTDes8@@@Z @ 2 NONAME ; int CSecureSocket::AvailableCipherSuites(class TDes8 &)
	?CancelAll@CSecureSocket@@QAEXXZ @ 3 NONAME ; void CSecureSocket::CancelAll(void)
	?CancelHandshake@CSecureSocket@@QAEXXZ @ 4 NONAME ; void CSecureSocket::CancelHandshake(void)
	?CancelRecv@CSecureSocket@@QAEXXZ @ 5 NONAME ; void CSecureSocket::CancelRecv(void)
	?CancelSend@CSecureSocket@@QAEXXZ @ 6 NONAME ; void CSecureSocket::CancelSend(void)
	?ClientCert@CSecureSocket@@QAEPBVCX509Certificate@@XZ @ 7 NONAME ; class CX509Certificate const * CSecureSocket::ClientCert(void)
	?ClientCertMode@@YA?AW4TClientCertMode@@XZ @ 8 NONAME ; enum TClientCertMode ClientCertMode(void)
	?Close@CSecureSocket@@QAEXXZ @ 9 NONAME ; void CSecureSocket::Close(void)
	?CurrentCipherSuite@CSecureSocket@@QAEHAAVTDes8@@@Z @ 10 NONAME ; int CSecureSocket::CurrentCipherSuite(class TDes8 &)
	?DialogMode@CSecureSocket@@QAE?AW4TDialogMode@@XZ @ 11 NONAME ; enum TDialogMode CSecureSocket::DialogMode(void)
	?FlushSessionCache@CSecureSocket@@QAEXXZ @ 12 NONAME ; void CSecureSocket::FlushSessionCache(void)
	?GetOpt@CSecureSocket@@QAEHIIAAH@Z @ 13 NONAME ; int CSecureSocket::GetOpt(unsigned int, unsigned int, int &)
	?GetOpt@CSecureSocket@@QAEHIIAAVTDes8@@@Z @ 14 NONAME ; int CSecureSocket::GetOpt(unsigned int, unsigned int, class TDes8 &)
	?NewL@CSecureSocket@@SAPAV1@AAVRSocket@@ABVTDesC16@@@Z @ 15 NONAME ; class CSecureSocket * CSecureSocket::NewL(class RSocket &, class TDesC16 const &)
	?Protocol@CSecureSocket@@QAEHAAVTDes16@@@Z @ 16 NONAME ; int CSecureSocket::Protocol(class TDes16 &)
	?Recv@CSecureSocket@@QAEXAAVTDes8@@AAVTRequestStatus@@@Z @ 17 NONAME ; void CSecureSocket::Recv(class TDes8 &, class TRequestStatus &)
	?RecvOneOrMore@CSecureSocket@@QAEXAAVTDes8@@AAVTRequestStatus@@AAV?$TPckgBuf@H@@@Z @ 18 NONAME ; void CSecureSocket::RecvOneOrMore(class TDes8 &, class TRequestStatus &, class TPckgBuf<int> &)
	?RenegotiateHandshake@CSecureSocket@@QAEXAAVTRequestStatus@@@Z @ 19 NONAME ; void CSecureSocket::RenegotiateHandshake(class TRequestStatus &)
	?Send@CSecureSocket@@QAEXABVTDesC8@@AAVTRequestStatus@@@Z @ 20 NONAME ; void CSecureSocket::Send(class TDesC8 const &, class TRequestStatus &)
	?Send@CSecureSocket@@QAEXABVTDesC8@@AAVTRequestStatus@@AAV?$TPckgBuf@H@@@Z @ 21 NONAME ; void CSecureSocket::Send(class TDesC8 const &, class TRequestStatus &, class TPckgBuf<int> &)
	?ServerCert@CSecureSocket@@QAEPBVCX509Certificate@@XZ @ 22 NONAME ; class CX509Certificate const * CSecureSocket::ServerCert(void)
	?SetAvailableCipherSuites@CSecureSocket@@QAEHABVTDesC8@@@Z @ 23 NONAME ; int CSecureSocket::SetAvailableCipherSuites(class TDesC8 const &)
	?SetClientCert@CSecureSocket@@QAEHABVCX509Certificate@@@Z @ 24 NONAME ; int CSecureSocket::SetClientCert(class CX509Certificate const &)
	?SetClientCertMode@CSecureSocket@@QAEHW4TClientCertMode@@@Z @ 25 NONAME ; int CSecureSocket::SetClientCertMode(enum TClientCertMode)
	?SetDialogMode@CSecureSocket@@QAEHW4TDialogMode@@@Z @ 26 NONAME ; int CSecureSocket::SetDialogMode(enum TDialogMode)
	?SetOpt@CSecureSocket@@QAEHIIABVTDesC8@@@Z @ 27 NONAME ; int CSecureSocket::SetOpt(unsigned int, unsigned int, class TDesC8 const &)
	?SetOpt@CSecureSocket@@QAEHIIH@Z @ 28 NONAME ; int CSecureSocket::SetOpt(unsigned int, unsigned int, int)
	?SetProtocol@CSecureSocket@@QAEHABVTDesC16@@@Z @ 29 NONAME ; int CSecureSocket::SetProtocol(class TDesC16 const &)
	?SetServerCert@CSecureSocket@@QAEHABVCX509Certificate@@@Z @ 30 NONAME ; int CSecureSocket::SetServerCert(class CX509Certificate const &)
	?StartClientHandshake@CSecureSocket@@QAEXAAVTRequestStatus@@@Z @ 31 NONAME ; void CSecureSocket::StartClientHandshake(class TRequestStatus &)
	?StartServerHandshake@CSecureSocket@@QAEXAAVTRequestStatus@@@Z @ 32 NONAME ; void CSecureSocket::StartServerHandshake(class TRequestStatus &)

